{"id":"../node_modules/react-textfit/lib/utils/throttle.js","dependencies":[{"name":"/Users/smurali/Documents/my_portfolio/package.json","includedInParent":true,"mtime":1541126670979},{"name":"/Users/smurali/Documents/my_portfolio/node_modules/react-textfit/package.json","includedInParent":true,"mtime":1541126669955},{"name":"/Users/smurali/Documents/my_portfolio/node_modules/react-textfit/.babelrc","includedInParent":true,"mtime":1497004458000}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = throttle;\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n * Taken from https://github.com/component/throttle v1.0.0\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle(func, wait) {\n    var ctx = void 0;\n    var args = void 0;\n    var rtn = void 0;\n    var timeoutID = void 0;\n    var last = 0;\n\n    function call() {\n        timeoutID = 0;\n        last = +new Date();\n        rtn = func.apply(ctx, args);\n        ctx = null;\n        args = null;\n    }\n\n    return function throttled() {\n        ctx = this;\n        args = arguments;\n        var delta = new Date() - last;\n        if (!timeoutID) {\n            if (delta >= wait) call();else timeoutID = setTimeout(call, wait - delta);\n        }\n        return rtn;\n    };\n}","map":{"mappings":[{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../node_modules/react-textfit/lib/utils/throttle.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}}],"sources":{"../node_modules/react-textfit/lib/utils/throttle.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = throttle;\n/**\n * Returns a new function that, when invoked, invokes `func` at most once per `wait` milliseconds.\n * Taken from https://github.com/component/throttle v1.0.0\n *\n * @param {Function} func Function to wrap.\n * @param {Number} wait Number of milliseconds that must elapse between `func` invocations.\n * @return {Function} A new function that wraps the `func` function passed in.\n */\n\nfunction throttle(func, wait) {\n    var ctx = void 0;\n    var args = void 0;\n    var rtn = void 0;\n    var timeoutID = void 0;\n    var last = 0;\n\n    function call() {\n        timeoutID = 0;\n        last = +new Date();\n        rtn = func.apply(ctx, args);\n        ctx = null;\n        args = null;\n    }\n\n    return function throttled() {\n        ctx = this;\n        args = arguments;\n        var delta = new Date() - last;\n        if (!timeoutID) {\n            if (delta >= wait) call();else timeoutID = setTimeout(call, wait - delta);\n        }\n        return rtn;\n    };\n}"},"lineCount":40}},"hash":"bcb267686df0d4486b316bb7d6273560","cacheData":{"env":{}}}